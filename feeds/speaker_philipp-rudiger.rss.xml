<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>/</link><description></description><lastBuildDate>Thu, 12 May 2022 00:00:00 +0000</lastBuildDate><item><title>Building Complex Visualizations Easily</title><link>/euroscipy-2015/building-complex-visualizations-easily.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Scientific visualization typically requires large amounts of custom coding that obscures the underlying principles of the work and makes it more difficult to share and reproduce the results. Here we describe how the new HoloViews Python package, combined with the IPython Notebook, provides a rich interface for flexible and nearly code-free visualization of your results while storing a full record.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philipp Rudiger</dc:creator><pubDate>Mon, 05 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2015-10-05:euroscipy-2015/building-complex-visualizations-easily.html</guid></item><item><title>Easily build interactive plots and apps with hvPlot</title><link>/pycon-de-2022/easily-build-interactive-plots-and-apps-with-hvplot.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker:: Philipp Rudiger Maxime Liquet&lt;/p&gt;
&lt;p&gt;Track: PyData: Visualization
Do you use the &lt;cite&gt;.plot()&lt;/cite&gt; API of pandas or xarray? Do you ever wish it was easier for you or your collaborators to try out different combinations of the parameters in your data-processing pipeline? This tutorial will introduce you to [hvPlot](&lt;a class="reference external" href="https://hvplot.holoviz.org/"&gt;https://hvplot.holoviz.org/&lt;/a&gt;), a library that:
* supercharges the &lt;cite&gt;.plot&lt;/cite&gt; API with extra capabilities like interactive plots, rendering of very large datasets, and simple composition and linking of plots, and
* makes it really easy to build interactive web applications, whether to make data exploration easier for yourself or for sharing your results with others, by simply replacing arguments in your method calls with widgets.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2022 conference, April 11-13 2022.
&lt;a class="reference external" href="https://2022.pycon.de"&gt;https://2022.pycon.de&lt;/a&gt;
More details at the conference page: &lt;a class="reference external" href="https://2022.pycon.de/program/38HQZ3"&gt;https://2022.pycon.de/program/38HQZ3&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter: &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philipp Rudiger</dc:creator><pubDate>Thu, 12 May 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2022-05-12:pycon-de-2022/easily-build-interactive-plots-and-apps-with-hvplot.html</guid><category>PyCon</category><category>PyConDE</category><category>pyconde2022</category><category>pydata</category><category>PyDataBerlin</category><category>pydataberlin2022</category></item><item><title>Panel: Turn any notebook into a deployable dashboard</title><link>/pydata-berlin-2019/panel-turn-any-notebook-into-a-deployable-dashboard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Speaker: Philipp Rudiger&lt;/p&gt;
&lt;p&gt;Track:PyData
Quickly turn your existing analyses built on the PyData stack into shareable, standalone apps and dashboards using the new open-source [Panel](http://panel.pyviz.org) library without learning the details of web development.&lt;/p&gt;
&lt;p&gt;Recorded at the PyConDE &amp;amp; PyData Berlin 2019 conference.
&lt;a class="reference external" href="https://pycon.de"&gt;https://pycon.de&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;More details at the conference page: &lt;a class="reference external" href="https://de.pycon.org/program/ZT9NY9"&gt;https://de.pycon.org/program/ZT9NY9&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pydataberlin"&gt;https://twitter.com/pydataberlin&lt;/a&gt;
Twitter:  &lt;a class="reference external" href="https://twitter.com/pyconde"&gt;https://twitter.com/pyconde&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philipp Rudiger</dc:creator><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-10-10:pydata-berlin-2019/panel-turn-any-notebook-into-a-deployable-dashboard.html</guid></item><item><title>Deploying Interactive Jupyter Dashboards for Visualizing Hundreds of Millions of Datapoints, in 30 Lines of Python</title><link>/scipy-2017/deploying-interactive-jupyter-dashboards-for-visualizing-hundreds-of-millions-of-datapoints-in-30-lines-of-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;It can be difficult to assemble the right set of packages from the Python scientific software ecosystem to solve complex problems. This presentation will show step by step how to make and deploy a concise, fast, and fully reproducible recipe for interactive visualization of millions or billions of datapoints using very few lines of Python in a Jupyter notebook using a combination of the HoloViews, Datashader, Dask, Bokeh and paramNB libraries and deployed as a Jupyter Dashboard.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Philipp Rudiger</dc:creator><pubDate>Mon, 17 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2017-07-17:scipy-2017/deploying-interactive-jupyter-dashboards-for-visualizing-hundreds-of-millions-of-datapoints-in-30-lines-of-python.html</guid><category>jupyter notebook</category></item><item><title>Panel: Turn any Notebook into a Deployable Dashboard</title><link>/scipy-2019/panel-turn-any-notebook-into-a-deployable-dashboard.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Panel (panel.pyviz.org) is a new package that lets you create custom interactive apps and dashboards by connecting user-defined widgets to plots, images, tables, or text. Compared to other approaches, Panel is novel in that it works across nearly all plotting libraries, works just as well in a Jupyter notebook as on a standalone secure web server, uses the same code for both those cases, supports both Python-backed and static HTML/JavaScript exported applications, and can be used to develop rich interactive applications without tying your domain-specific code to any particular GUI or web tools.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bednar</dc:creator><pubDate>Sat, 13 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-07-13:scipy-2019/panel-turn-any-notebook-into-a-deployable-dashboard.html</guid></item><item><title>Visualize any Data Easily, from Notebooks to Dashboards</title><link>/scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial you will see how to visualize and communicate your data easily and effectively using Python tools. You'll learn how to use Panel to lay out your existing plots with widgets to make apps in the notebook or as deployed dashboards, hvPlot to make your Pandas or Xarray .plot() API calls return interactive, explorable plots, HoloViews and GeoViews to help you explore multidimensional data naturally without having to build a plot for each combination or sample of the data space, and Datashader to visualize even the very largest datasets faithfully in a web browser. See pyviz.org for links to all these tools and more.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">James Bednar</dc:creator><pubDate>Thu, 11 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-07-11:scipy-2019/visualize-any-data-easily-from-notebooks-to-dashboards.html</guid><category>tutorial</category></item></channel></rss>