<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>/</link><description></description><lastBuildDate>Fri, 14 May 2021 00:00:00 +0000</lastBuildDate><item><title>Plugins: Adding Flexibility to Your Apps</title><link>/pycon-us-2019/plugins-adding-flexibility-to-your-apps.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python is a flexible language. Your Python app, on the other hand, is
usually more set in stone: buttons, functions, displays are all
explicitly defined.&lt;/p&gt;
&lt;p&gt;In this talk you'll learn how to take advantage of features like
decorators and functions as first-class objects to set up a simple
plugin system that allows your app to be more flexible. In fact, you can
allow your users to add or customize functionality they want after you
ship.&lt;/p&gt;
&lt;p&gt;By using plugins, your code becomes more modular and maintainable. At
the same time your users may be able to use your great app to work with
data or challenges you didn't even know existed.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geir Arne Hjelle</dc:creator><pubDate>Sun, 05 May 2019 13:10:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-05-05:pycon-us-2019/plugins-adding-flexibility-to-your-apps.html</guid><category>talk</category></item><item><title>Introduction to Decorators: Power Up Your Python Code</title><link>/pycon-us-2020/introduction-to-decorators-power-up-your-python-code.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geir Arne Hjelle</dc:creator><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2020-04-17:pycon-us-2020/introduction-to-decorators-power-up-your-python-code.html</guid><category>tutorial</category></item><item><title>Introduction to Decorators: Power UP Your Python Code</title><link>/pycon-us-2021/introduction-to-decorators-power-up-your-python-code.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python supports functions as first-class objects. This means that functions can be assigned to variables, and passed to and from other functions, just like any other object in Python.&lt;/p&gt;
&lt;p&gt;One powerful application of this is the decorator syntax, which makes it easy to apply one function to another at compile time. Decorators offer a simple and readable way of adding capabilities to your code. This tutorial will teach you how decorators work, and how to create your own decorators.&lt;/p&gt;
&lt;p&gt;Being comfortable with using and creating decorators, will make you a more efficient Python programmer.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Geir Arne Hjelle</dc:creator><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2021-05-14:pycon-us-2021/introduction-to-decorators-power-up-your-python-code.html</guid></item></channel></rss>