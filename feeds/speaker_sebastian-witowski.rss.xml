<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>/</link><description></description><lastBuildDate>Sat, 11 Sep 2021 00:00:00 +0000</lastBuildDate><item><title>Writing faster Python</title><link>/europython-2016/writing-faster-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Sebastian Witowski - Writing faster Python
[EuroPython 2016]
[19 July 2016]
[Bilbao, Euskadi, Spain]
(&lt;a class="reference external" href="https://ep2016.europython.eu//conference/talks/writing-faster-python"&gt;https://ep2016.europython.eu//conference/talks/writing-faster-python&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Presentation on how you can write faster Python in your daily work. I
will briefly explain ways of profiling the code, discuss different
code structures and show how they can be improved. You will see what
is the fastest way to remove duplicates from a list, what is faster
than a _for_ loop or how “asking for permission” is slower than
“begging for forgiveness”.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Did you know that Python preallocates integers from -5 to 257 ?
Reusing them 1000 times, instead of allocating memory for a bigger
integer, can save you a couple of milliseconds of code’s execution
time. If you want to learn more about this kind of optimizations then,
… well, probably this presentation is not for you :) Instead of going
into such small details, I will talk about more _&amp;quot;sane&amp;quot;_ ideas for
writing faster code.&lt;/p&gt;
&lt;p&gt;After a very brief overview of how to optimize Python code (rule 1:
don’t do this, rule 2: don’t do this yet, rule 3: ok, but what if I
really want to do this ?), I will show simple and fast ways of
measuring the execution time and finally, discuss examples of how some
code structures could be improved.&lt;/p&gt;
&lt;p&gt;You will see:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;What is the fastest way of removing duplicates from a list&lt;/li&gt;
&lt;li&gt;How much faster your code is when you reuse the built-in functions instead of trying to reinvent the wheel&lt;/li&gt;
&lt;li&gt;What is faster than the good ol’ _for_ loop&lt;/li&gt;
&lt;li&gt;If the lookup is faster in a list or a set (and when it makes sense to use each)&lt;/li&gt;
&lt;li&gt;How the “It's better to beg for forgiveness than to ask for permission” rule works in practice&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I will NOT go into details of _&amp;quot;serious&amp;quot;_ optimization, like using
different Python implementation or rewriting critical code in C, etc.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Witowski</dc:creator><pubDate>Sun, 31 Jul 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2016-07-31:europython-2016/writing-faster-python.html</guid></item><item><title>Wait, IPython can do that?!</title><link>/europython-2019/wait-ipython-can-do-that.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;I've been programming in Python for over 7 years. And from the time
someone introduced me to IPython, it immediately became my default
Python REPL. I enjoyed the syntax highlighting, code completion or the
instant access to the documentation. Over the years, I've picked up more
and more tricks that IPython could do: embedding IPython sessions,
starting IPython automatically when a test fails, taking advantage of
the startup files, not to mention all the various magic functions.&lt;/p&gt;
&lt;p&gt;It took me some time to discover all those features (if there is one
thing I would like you to take away from this talk, it’s that reading
the documentation of a tool that you are using &lt;em&gt;every day&lt;/em&gt; is probably a
good idea) and in this talk, I will give an overview of what you can do
with IPython REPL.&lt;/p&gt;
&lt;div class="line-block"&gt;
&lt;div class="line"&gt;Some of the things I will talk about:&lt;/div&gt;
&lt;div class="line"&gt;- Documentation with ? and ??, running shell functions in IPython,
magic functions&lt;/div&gt;
&lt;div class="line"&gt;- Profiles, startup files, configuration file, kernels, and extensions&lt;/div&gt;
&lt;div class="line"&gt;- How to better use IPython for debugging&lt;/div&gt;
&lt;div class="line"&gt;- How to use IPython for profiling&lt;/div&gt;
&lt;div class="line"&gt;- Alternatives to IPython REPL&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;This talk is for you if you are a casual user of IPython - you know some
of its features, but maybe not all of them and instead of reading
through the documentation, you would prefer to see someone giving an
overview of IPython features and how you can use them.&lt;/p&gt;
&lt;p&gt;This talk is NOT for you if you are up to date with IPython
documentation and you think you know most of its features.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Witowski</dc:creator><pubDate>Wed, 10 Jul 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-07-10:europython-2019/wait-ipython-can-do-that.html</guid><category>Best Practice</category><category>Development</category><category>Ipython</category><category>Tooling</category><category>iPython</category></item><item><title>Python Versions and Dependencies Made Easy</title><link>/pycon-au-2021/python-versions-and-dependencies-made-easy.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;(Sebastian Witowski) Presentation on using pyenv, virtual environments, and pipx to build an easy-to-manage Python development setup. Setup, where you can easily switch between different Python versions, and you don't have to worry about messing up packages in your projects.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="https://2021.pycon.org.au/program/YHTFLA/"&gt;https://2021.pycon.org.au/program/YHTFLA/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;python, pycon, australia, programming, conference, technical, pyconline, developers, panel, sessions, libraries, frameworks, community, sysadmins, students, education, data, science&lt;/p&gt;
&lt;p&gt;Videos licensed as CC-BY-NC-SA 4.0&lt;/p&gt;
&lt;p&gt;PyCon AU is the national conference for the Python programming community, bringing together professional, student and enthusiast developers, sysadmins and operations folk, students, educators, scientists, statisticians, and many others besides, all with a love for working with Python.&lt;/p&gt;
&lt;p&gt;PyCon AU informs the country’s Python developers with presentations, tutorials and panel sessions by experts and core developers of Python, as well as the libraries and frameworks that they rely on.&lt;/p&gt;
&lt;p&gt;Produced by Next Day Video Australia: &lt;a class="reference external" href="https://nextdayvideo.com.au"&gt;https://nextdayvideo.com.au&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Sat Sep 11 17:30:00 2021 at Curlyboi Theatre&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Witowski</dc:creator><pubDate>Sat, 11 Sep 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2021-09-11:pycon-au-2021/python-versions-and-dependencies-made-easy.html</guid><category>SebastianWitowski</category><category>pyconau</category><category>pyconau_2021</category></item><item><title>It’s 2019 and I’m still using Python 2. Should I be worried?</title><link>/pycon-jp-2019/its-2019-and-im-still-using-python-2-should-i-be-worried.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;01_402_It’s 2019 and I’m still using Python 2. Should I be worried?(Sebastian Witowski)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Witowski</dc:creator><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-09-16:pycon-jp-2019/its-2019-and-im-still-using-python-2-should-i-be-worried.html</guid></item><item><title>Wait, IPython Can Do That?</title><link>/pycon-taiwan-2019/wait-ipython-can-do-that.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Day 3, R0 11:30–12:00&lt;/p&gt;
&lt;p&gt;I’ve been using IPython since the beginning of my adventure with Python. Over the years, I've picked up more and more tricks that it could do.&lt;/p&gt;
&lt;p&gt;In this talk, I would like to share some of them with you:
- Documentation with ? and ??, running shell functions in IPython, magic functions
- Profiles, startup files, configuration file, kernels, and extensions
- How to better use IPython for debugging
- How to use IPython for profiling
- Alternatives to IPython REPL&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="https://switowski.com/python/ipython/slides/2019/07/07/wait-ipython-can-do-that.html"&gt;https://switowski.com/python/ipython/slides/2019/07/07/wait-ipython-can-do-that.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Speaker: Sebastian Witowski&lt;/p&gt;
&lt;p&gt;I'm a software engineer with 7 years of experience in full stack development, operations and leading small projects.
I had worked as a DevOps at CERN for the past 6 years, but recently I have decided to move to Python consulting and trainings.&lt;/p&gt;
&lt;p&gt;In my spare time, I like to give talks about Python, coding and productivity. Python is my main programming language, but I don't shy away from using different languages as well.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Witowski</dc:creator><pubDate>Sun, 22 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-09-22:pycon-taiwan-2019/wait-ipython-can-do-that.html</guid></item><item><title>Modern Python Developer's Toolkit</title><link>/pycon-us-2020/modern-python-developers-toolkit.html</link><description></description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Sebastian Witowski</dc:creator><pubDate>Fri, 17 Apr 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2020-04-17:pycon-us-2020/modern-python-developers-toolkit.html</guid><category>tutorial</category></item><item><title>Lightning Talks 2</title><link>/pycon-us-2021/lightning-talks-2.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Agenda of Lightning Talks  - Hosted by Dustin Ingram and Lorena Mesa&lt;/p&gt;
&lt;p&gt;Aakanksha Chouhan - Moulding Data for ML&lt;/p&gt;
&lt;p&gt;Andres &amp;amp; Denny - PyCon Latam the conference you don't want to miss&lt;/p&gt;
&lt;p&gt;Cristián Maureira-Fredes - Python Chile and its first PyCon!&lt;/p&gt;
&lt;p&gt;Dia-ning Yudono - Parametrizing tests with unittest and pytest&lt;/p&gt;
&lt;p&gt;Gregory M. Kapfhammer - Committing to Writing Good Commit Messages: Supporting the   Creation of Human and Machine-Readable Commit Messages with Python&lt;/p&gt;
&lt;p&gt;Rumanu - Save Sheldon, in 5 minutes!&lt;/p&gt;
&lt;p&gt;Sebastian Witowski - 9 Jupyter notebook tricks for your next Advent of Code&lt;/p&gt;
&lt;p&gt;Dhananjay Jindal - f-Strings: How cool are they?&lt;/p&gt;
&lt;p&gt;Grey Li - FastAPI Seems Good, so Why Don't We Build Something Similar For Flask?&lt;/p&gt;
&lt;p&gt;Jeremy Gibson - direnv will change your life... maybe.&lt;/p&gt;
&lt;p&gt;Jürgen Gmach - How to Maintain Many, Many, Many, Many... Many Git Repositories?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dustin Ingram</dc:creator><pubDate>Fri, 14 May 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2021-05-14:pycon-us-2021/lightning-talks-2.html</guid></item></channel></rss>