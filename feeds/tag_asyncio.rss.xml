<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>/</link><description></description><lastBuildDate>Thu, 31 Oct 2019 00:00:00 +0000</lastBuildDate><item><title>Desenvolvendo APIs REST com Python 3 e Asyncio</title><link>/caipyra-2016/desenvolvendo-apis-rest-com-python-3-e-asyncio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Palestra do Renato Garcia no Caipyra 2016:&lt;/p&gt;
&lt;p&gt;Desenvolvendo APIs REST com Python 3 e Asyncio&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Renato Garcia</dc:creator><pubDate>Sun, 26 Jun 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2016-06-26:caipyra-2016/desenvolvendo-apis-rest-com-python-3-e-asyncio.html</guid><category>api</category><category>apis</category><category>rest</category><category>rest api</category><category>asyncio</category><category>async</category></item><item><title>Better async code with Python 3</title><link>/pycon-es-2015/better-async-code-with-python-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Learn async web development hands-on by using asyncio event loop in combination with subgenerator delegation syntax (yield from), creating beautiful concurrent code without writing a single callback.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Caceres</dc:creator><pubDate>Tue, 02 Feb 2016 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2016-02-02:pycon-es-2015/better-async-code-with-python-3.html</guid><category>workshop</category><category>asyncio</category></item><item><title>Why I still develop synchronous web in the asyncIO era</title><link>/pycon-italia-2017/why-i-still-develop-synchronous-web-in-the-asyncio-era.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Since python 3.4 the introduction of the asyncIO module produced a new
way of building web applications and tons of new frameworks. With
asyncIO we take advantage of large throughput over the network, but is
it really everything about web development?&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giovanni Barillari</dc:creator><pubDate>Sun, 09 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2017-04-09:pycon-italia-2017/why-i-still-develop-synchronous-web-in-the-asyncio-era.html</guid><category>web</category><category>asyncio</category><category>web-development</category><category>backend</category></item><item><title>How to use Web-Sockets in Python</title><link>/pycon-italia-2018/how-to-use-web-sockets-in-python.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Modern web-apps require bi-directional communication, reacting not only
to user actions but also to server events. This can be achieved
elegantly using Web Sockets, a protocol standardized by W3C to be a
default tool for full- duplex connections on the Web.&lt;/p&gt;
&lt;p&gt;Although most of web-frameworks do not support Web Socket integration
out of the box, Python has multiple options available making it a piece
of cake. This talk showcases running Web Sockets with Python web-apps,
starting from situations that can make a good use of it, and followed by
an implementation with most practical frameworks: Tornado and Django
Channels. We will explore a similar style but different underlying
technologies of both, and finish with a live demo.&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;sabato 21 aprile&lt;/strong&gt; at 12:00 &lt;a class="reference external" href="/p3/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Anton Caceres</dc:creator><pubDate>Sat, 21 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2018-04-21:pycon-italia-2018/how-to-use-web-sockets-in-python.html</guid><category>tornado</category><category>javascript</category><category>websockets</category><category>web-applications</category><category>web development</category><category>asyncio</category></item><item><title>Using Asyncio in Python 3</title><link>/pycon-philippines-2019/using-asyncio-in-python-3.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio (together with async / await syntax) is one of the most exciting new features in Python 3. Marte will detail what it is and how it can be used, together with concepts surrounding it.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Marte Soliza</dc:creator><pubDate>Sat, 23 Feb 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-02-23:pycon-philippines-2019/using-asyncio-in-python-3.html</guid><category>async</category><category>asyncio</category></item><item><title>Asyncio in the Wild</title><link>/pycon-se-2019/asyncio-in-the-wild.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio is a fairly new tool and no often used in production. In this talk we will be aiming for use-cases and examples so people can get more confidence moving away from the synchronous world. The talk aims to solve the problem of uncertainty when getting started with asynchronous programming in Python. After the talk the audience will be equipped with new tools they can look up at home to get started with asynchronous web development in Python, also, hopefully, they will have some extra confidence in the area.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Akos Hochrein</dc:creator><pubDate>Thu, 31 Oct 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-10-31:pycon-se-2019/asyncio-in-the-wild.html</guid><category>async</category><category>asyncio</category></item><item><title>Concurrent asyncio and sanity</title><link>/pycon-uk-2019/concurrent-asyncio-and-sanity.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Do you find programming with asyncio daunting? Are you wondering how you'd build a real-world network-connected service with this and not die trying? In this talk I want to share some best practices and tips to help you create reliable, maintainable applications using concurrency.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Martijn Pieters</dc:creator><pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-09-16:pycon-uk-2019/concurrent-asyncio-and-sanity.html</guid><category>asyncio</category><category>concurrency</category><category>scalability</category></item><item><title>Thinking Outside the GIL with AsyncIO and Multiprocessing</title><link>/pycon-us-2018/thinking-outside-the-gil-with-asyncio-and-multiprocessing.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Have you ever written a small, elegant application that couldn't keep up with the growth of your data or user demand? Did your beautiful design end up buried in threads and locks? Did Python's very special Global Interpreter Lock make all of this an exercise in futility?&lt;/p&gt;
&lt;p&gt;This talk is for you! With the combined powers of AsyncIO and multiprocessing, we'll redesign an old multithreaded application limited by the GIL into a modern solution that scales with the demand using only the standard library. No prior AsyncIO or multiprocessing experience required.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">John Reese</dc:creator><pubDate>Fri, 11 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2018-05-11:pycon-us-2018/thinking-outside-the-gil-with-asyncio-and-multiprocessing.html</guid><category>asyncio</category><category>multiprocessing</category></item><item><title>Asyncio, websockets, and BTC sitting in a tree</title><link>/pydata-amsterdam-2018/asyncio-websockets-and-btc-sitting-in-a-tree.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Asyncio is a different way to think about how you program. In this talk we will talk about using asyncio to consume data from a bitcoin exchange offering a websocket endpoint.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Giovanni Lanzani</dc:creator><pubDate>Sat, 26 May 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2018-05-26:pydata-amsterdam-2018/asyncio-websockets-and-btc-sitting-in-a-tree.html</guid><category>asyncio</category></item><item><title>Building real-world applications with `asyncio`</title><link>/pytexas-2015/building-real-world-applications-with-asyncio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this tutorial, Eloy Zu√±iga, Jr. and Joel Watts will work through the
process of building an event-driven application using
&lt;tt class="docutils literal"&gt;`asyncio&lt;/tt&gt; &amp;lt;&lt;a class="reference external" href="https://docs.python.org/3/library/asyncio.html"&gt;https://docs.python.org/3/library/asyncio.html&lt;/a&gt;&amp;gt;`__ and web
technologies. By the end, we hope you'll be able to answer the following
questions:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Why should I care about async programming at all?&lt;/li&gt;
&lt;li&gt;What is &lt;tt class="docutils literal"&gt;asyncio&lt;/tt&gt; and how is it used?&lt;/li&gt;
&lt;li&gt;How do I use this stuff to solve real-world problems?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We'll assume some familiarity with Python, but no prior experience with
async programming is required. Please come with Python 3.4+ installed.&lt;/p&gt;
&lt;p&gt;All the codez can be found in these 2 repos&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/eloyz/aioui"&gt;https://github.com/eloyz/aioui&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://github.com/jpwatts/aioserver"&gt;https://github.com/jpwatts/aioserver&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joel Watts</dc:creator><pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2015-10-15:pytexas-2015/building-real-world-applications-with-asyncio.html</guid><category>Asyncio</category><category>async</category></item><item><title>Why should I care about asyncio?</title><link>/pytexas-2015/why-should-i-care-about-asyncio.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Python 3.3 added &lt;tt class="docutils literal"&gt;yield from&lt;/tt&gt; and 3.4 added
&lt;tt class="docutils literal"&gt;`asyncio&lt;/tt&gt; &amp;lt;&lt;a class="reference external" href="https://docs.python.org/3/library/asyncio.html"&gt;https://docs.python.org/3/library/asyncio.html&lt;/a&gt;&amp;gt;`__. Python
3.5 adds &lt;tt class="docutils literal"&gt;async&lt;/tt&gt; and &lt;tt class="docutils literal"&gt;await&lt;/tt&gt; from &lt;a class="reference external" href="https://www.python.org/dev/peps/pep-0492/"&gt;PEP
492&lt;/a&gt;. What is all this
stuff? Why do we need new syntax? And why should I care?&lt;/p&gt;
&lt;p&gt;This talk is about why async programming is worth caring about and why
Python's approach has me so excited.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Joel Watts</dc:creator><pubDate>Thu, 15 Oct 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2015-10-15:pytexas-2015/why-should-i-care-about-asyncio.html</guid><category>Asyncio</category><category>async</category></item><item><title>Call Me Later</title><link>/pywaw-summit-2015/call-me-later.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Talk: Call Me Later&lt;/p&gt;
&lt;p&gt;asyncio is the reason to switch to Python 3 now. There, I said it. Is this used in production at Facebook? It is. On how many machines? On all of them. Why? It makes concurrent code easier to read. Easier to test. Sometimes even faster to run.If the words &amp;quot;event loop&amp;quot;, &amp;quot;coroutine&amp;quot;, &amp;quot;yield from&amp;quot;, &amp;quot;executor&amp;quot; or &amp;quot;future&amp;quot; make you feel uneasy, come learn how beautiful and easy to understand it actually is at the core. No prior asyncore, Twisted or Node.js experience required.&lt;/p&gt;
&lt;p&gt;Speaker: ≈Åukasz Langa. Python committer since 2010. Chronic perfectionist. Pianist. Dad. In his free time uses Python 3 to help Facebook maintain cache consistency.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a class="reference external" href="http://fb.me/call-me-later"&gt;http://fb.me/call-me-later&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;License: For reuse of this video under a more permissive license please get in touch with us. The speakers retain the copyright for their performances.&lt;/p&gt;
&lt;p&gt;&lt;a class="reference external" href="http://summit.pywaw.org"&gt;http://summit.pywaw.org&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">≈Åukasz Langa</dc:creator><pubDate>Mon, 02 Nov 2015 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2015-11-02:pywaw-summit-2015/call-me-later.html</guid><category>asyncio</category></item></channel></rss>