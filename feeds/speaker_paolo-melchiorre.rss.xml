<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"><channel><title>PyVideo.org</title><link>/</link><description></description><lastBuildDate>Fri, 08 Apr 2022 00:00:00 +0000</lastBuildDate><item><title>Lighting talks at Django Day Copenhagen 2022</title><link>/django-day-copenhagen-2022/lighting-talks-at-django-day-copenhagen-2022.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Lighting talks at Django Day Copenhagen 2022. Featuring talks by, in order of appearance:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Romulo Jales 0:02&lt;/li&gt;
&lt;li&gt;Juha-Matti Santala 04:35&lt;/li&gt;
&lt;li&gt;Benjamin Balder Bach 09:23&lt;/li&gt;
&lt;li&gt;Jon Gould 15:06&lt;/li&gt;
&lt;li&gt;Paolo Melchiorre 21:56&lt;/li&gt;
&lt;/ul&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Romulo Jales</dc:creator><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2022-04-08:django-day-copenhagen-2022/lighting-talks-at-django-day-copenhagen-2022.html</guid><category>Django</category><category>DjangoDayCopenhagen</category><category>DjangoDayCopenhagen2022</category></item><item><title>Make the most of Django</title><link>/django-day-copenhagen-2022/make-the-most-of-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Make the most of Django&amp;quot; by Paolo Melchiorre at Django Day Copenhagen 2022. Talk description at: &lt;a class="reference external" href="https://2022.djangoday.dk/talks/paolo/"&gt;https://2022.djangoday.dk/talks/paolo/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Fri, 08 Apr 2022 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2022-04-08:django-day-copenhagen-2022/make-the-most-of-django.html</guid><category>Django</category><category>DjangoDayCopenhagen</category><category>DjangoDayCopenhagen2022</category></item><item><title>A Pythonic Full-Text Search - Paolo Melchiorre</title><link>/djangocon-europe-2020/a-pythonic-full-text-search-paolo-melchiorre.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;DjangoCon Europe 2020 (Virtual)
September 18-19, 2020 - Bonus Talk&lt;/p&gt;
&lt;p&gt;&amp;quot;A Pythonic Full-Text Search&amp;quot; by Paolo Melchiorre&lt;/p&gt;
&lt;p&gt;Keeping in mind the pythonic principle that “simple is better than complex” we’ll see how to implement full-text search in a web service using only latest versions of Django and PostgreSQL and we’ll analyze the advantages compared to more complex solutions based on external services.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2020-09-18:djangocon-europe-2020/a-pythonic-full-text-search-paolo-melchiorre.html</guid></item><item><title>Django with PostgreSQL Superpowers</title><link>/djangocon-europe-2021/django-with-postgresql-superpowers.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;pre&gt;Every time we’re going to create a new project with **Django** we make assessments on its requirements to choose the best architecture, of which, the **database** is usually the core.

Django is a _database-agnostic_ web framework but natively supports only 4 **open source** databases: PostgreSQL, SQLite, MariaDB and MySQL.

**PostgreSQL** has the _richest feature set_ of any supported database and some of these features are natively supported directly in Django via its contrib module.

In this talk we’ll see how to use to our _advantage_ the features of PostgreSQL as a database in Django, its exclusive features present in its _contrib module_ and also other **superpowers** that can be exploited through the use of _third-party packages_.

--- 

More info and slides: **https://www.paulox.net/2021/06/03/djangocon-europe-2021/**&lt;/pre&gt;</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Thu, 03 Jun 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2021-06-03:djangocon-europe-2021/django-with-postgresql-superpowers.html</guid><category>Django</category><category>DjangoConEU</category><category>djangoconeu2021</category></item><item><title>Maps with GeoDjango, PostGIS and Leaflet</title><link>/djangocon-europe-2019/maps-with-geodjango-postgis-and-leaflet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk we will see how we have integrated a map into a web project already in production using GeoDjango, PostGIS and Leaflet and we will perform a demonstration of integration of a map from scratch into a Django project.
A map allows users to view and search for data in a spatial way and it is common to add one to their web project.
In this talk we will see how we have integrated a map into a web project already in production using GeoDjango, PostGIS and Leaflet and we will perform a demonstration of integration of a map from scratch into a Django project.
GeoDjango is a module included in Django that transforms it into a world-class geographic Web framework.
PostGIS is an extension of the PostgreSQL database that adds support for geographic objects allowing you to perform spatial queries.
Leaflet is the leading open source JavaScript library for interactive web maps optimized for mobile devices.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-04-21:djangocon-europe-2019/maps-with-geodjango-postgis-and-leaflet.html</guid></item><item><title>Full-Text Search in Django with PostgreSQL</title><link>/europython-2017/full-text-search-in-django-with-postgresql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;After some experiences in the implementation of full-text search
functionality with different system, we have decided to use
PostgreSQL to implement full-text search functionality in our next
project, a website to search for shows, venues, bands and festivals.&lt;/p&gt;
&lt;p&gt;In the past, I have worked in two different projects, a mobile
platform to sell and buy used items and a sport videos sharing
platform, where I used two of the most currently famous full-text
search software (Elasticsearch or Solr) but I had some
synchronization and management problems.&lt;/p&gt;
&lt;p&gt;After that, in my company, we searched for new Django support of
full-text search PostgreSQL implementation and we decided to use it
to avoid any problems that I had in the past.&lt;/p&gt;
&lt;p&gt;I’m going to start speaking about the full-text search in a general
context and I want to show the problems I encountered implementing it
in the past.&lt;/p&gt;
&lt;p&gt;Afterwards, I’m going to talk about the PostgreSQL functionality to
implement the full-text search functionality and also present the
django.contrib.potgres.search module, with step-by-step
demonstrations of its functions with real world data.&lt;/p&gt;
&lt;p&gt;Finally, I’m going to show the way we use and test this functionality
in our project and which functionality lacks us to have a complete
implementation of full-text search in our project.&lt;/p&gt;
&lt;p&gt;At the end, I want to present my conclusions about our solution and I
want to explore some new features that will be present in the next
versions of Django and PostgreSQL.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Wed, 12 Jul 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2017-07-12:europython-2017/full-text-search-in-django-with-postgresql.html</guid></item><item><title>Paolo Melchiorre - A pythonic full-text search</title><link>/europython-2020/paolo-melchiorre-a-pythonic-full-text-search.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;A full-text search on a website is the best way to make its contents easily accessible to users because it returns better results and is in fact used in online search engines or social networks.
The implementation of full-text search can be complex and many adopt the strategy of using dedicated search engines in addition to the database, but in most cases this strategy turns out to be a big problem of architecture and performance.
In this talk we'll see a pythonic way to implement full-text search on a website using only Django and PostgreSQL, taking advantage of all the innovations introduced in latest years, and we'll analyse the problems of using additional search engines with examples deriving from my experience (e.g. djangoproject.com or readthedocs.org).
Through this talk you can learn how to add a full-text search on your website, if it's based on Django and PostgreSQL, or you can learn how to update the search function of your website if you use other search engines.
More info on &lt;a class="reference external" href="https://www.paulox.net/2020/07/23/europython-2020/"&gt;https://www.paulox.net/2020/07/23/europython-2020/&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Thu, 23 Jul 2020 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2020-07-23:europython-2020/paolo-melchiorre-a-pythonic-full-text-search.html</guid><category>europython</category><category>europython-2020</category><category>europython-online</category><category>Django</category><category>PostgreSQL</category></item><item><title>Ricerca full text in Django con PostgreSQL</title><link>/pycon-italia-2017/ricerca-full-text-in-django-con-postgresql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Dalla versione 1.10 di &lt;strong&gt;Django&lt;/strong&gt; è presente il modulo che facilita
l’utilizzo del motore di &lt;strong&gt;ricerca full text&lt;/strong&gt; di PostgreSQL. Dal
momento che &lt;strong&gt;PostgreSQL&lt;/strong&gt; è utilizzato in molti progetti Django,
sfruttare il suo motore di ricerca full text permette di avere questa
funzionalità molto facilmente, senza dover configurare prodotti esterni
e senza doversi preoccupare di mantenere sincronizzati i dati tra
differenti sistemi. Vedremo come abbiamo sfruttato questa funzionalità
di ricerca full text in un &lt;strong&gt;progetto reale&lt;/strong&gt;.&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2017-04-08:pycon-italia-2017/ricerca-full-text-in-django-con-postgresql.html</guid><category>Full Text Search</category><category>search</category><category>postgresql</category><category>python3</category><category>django</category></item><item><title>DjangoProject.com - Ricerca Full-Text con PostgreSQL</title><link>/pycon-italia-2018/djangoprojectcom-ricerca-full-text-con-postgresql.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Il sito web ufficiale del progetto &lt;strong&gt;Django&lt;/strong&gt; (
&lt;a class="reference external" href="http://www.djangoproject.com"&gt;www.djangoproject.com&lt;/a&gt; ) è basato
sull’ultima versione stabile di Django, la &lt;strong&gt;documentazione&lt;/strong&gt; del
progetto è generata con &lt;strong&gt;Sphinx&lt;/strong&gt; ed i documenti generati sono poi
memorizzati su &lt;strong&gt;PostgreSQL&lt;/strong&gt; per essere visualizzati sul sito.&lt;/p&gt;
&lt;p&gt;Il modulo per la &lt;strong&gt;ricerca&lt;/strong&gt; della documentazione nel sito del progetto
Django è molto utilizzato e fino a poco tempo fa era &lt;strong&gt;basato&lt;/strong&gt; su
&lt;strong&gt;Elasticsearch&lt;/strong&gt;. L’utilizzo di Elasticsearch ha causato &lt;strong&gt;problemi&lt;/strong&gt;
nella sincronizzazione dei dati e nell’aggiornamento dei driver di
connessione.&lt;/p&gt;
&lt;blockquote&gt;
In questo talk vedremo &lt;strong&gt;come&lt;/strong&gt; ho &lt;strong&gt;aggiornato&lt;/strong&gt; la funzione di
&lt;a class="reference external" href="https://docs.djangoproject.com/en/dev/search/?q=full+text+search"&gt;ricerca&lt;/a&gt;
del &lt;strong&gt;sito del progetto Django&lt;/strong&gt; utilizzando il modulo di &lt;strong&gt;Ricerca
Full- Text&lt;/strong&gt; di Django basato direttamente su &lt;strong&gt;PostgreSQL&lt;/strong&gt;. Questo
ha &lt;strong&gt;semplificato&lt;/strong&gt; molto l’infrastruttura e &lt;strong&gt;velocizzato&lt;/strong&gt; l’
&lt;strong&gt;aggiornamento&lt;/strong&gt; della documentazione, senza perdere nessuna delle
precedenti &lt;strong&gt;funzioni&lt;/strong&gt; di ricerca ma anzi migliorandole ed
aggiungendone altre da tempo richieste dagli &lt;strong&gt;utenti&lt;/strong&gt;.&lt;/blockquote&gt;
&lt;p&gt;Tramite questo talk potrai &lt;strong&gt;imparare&lt;/strong&gt; come &lt;strong&gt;aggiungere&lt;/strong&gt; una nuova
funzione di &lt;strong&gt;Ricerca Full-Text&lt;/strong&gt; nel &lt;strong&gt;tuo progetto&lt;/strong&gt; basato su Django
e PostgreSQL. In alternativa potreai imparare come &lt;strong&gt;aggiornare&lt;/strong&gt; la
ricerca esistente nel tuo sito se usi Elasticsearch o &lt;strong&gt;motori di
ricerca&lt;/strong&gt; simili .&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;&lt;em&gt;Per una **introduzione*&lt;/em&gt; ai temi del talk puoi leggere il mio articolo
sulla &lt;a class="reference external" href="http://www.paulox.net/2017/12/22/full-text-search-in-django-with-%20postgresql/"&gt;&amp;quot;Ricerca Full-Text in Django con
PostgreSQL&amp;quot;&lt;/a&gt;
basato sul mio talk presentato al &lt;a class="reference external" href="https://www.pycon.it/conference/talks/ricerca-full-text-in-django-con-%20postgresql"&gt;PyCon
Otto&lt;/a&gt;
nel 2017.*&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 20 April&lt;/strong&gt; at 16:45 &lt;a class="reference external" href="/en/sprints/schedule/pycon9/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Fri, 20 Apr 2018 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2018-04-20:pycon-italia-2018/djangoprojectcom-ricerca-full-text-con-postgresql.html</guid><category>web</category><category>search</category><category>postgresql</category><category>postgres</category><category>database</category><category>Python</category><category>documentation</category><category>django</category><category>elasticsearch</category><category>sphinx</category><category>Full Text Search</category><category>python3</category></item><item><title>Mappe 🗺️ con GeoDjango 🌎, PostGIS 🐘 e Leaflet 🍃</title><link>/pycon-italia-2019/mappe-con-geodjango-postgis-e-leaflet.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Una &lt;em&gt;mappa&lt;/em&gt; permette agli utenti di visualizzare e ricercare i dati in
maniera spaziale ed è comune l’esigenza di aggiungerne una al proprio
progetto web.&lt;/p&gt;
&lt;blockquote&gt;
In questo talk vedremo come abbiamo integrato una &lt;em&gt;mappa&lt;/em&gt; in un
progetto web già in produzione usando &lt;strong&gt;GeoDjango&lt;/strong&gt; , &lt;strong&gt;PostGIS&lt;/strong&gt; e
&lt;strong&gt;Leaflet&lt;/strong&gt; ed eseguiremo una dimostrazione di integrazione da zero
di una mappa in un progetto &lt;strong&gt;Django&lt;/strong&gt;.&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;GeoDjango&lt;/strong&gt; è un modulo incluso in &lt;strong&gt;Django&lt;/strong&gt; che lo trasforma in un
&lt;em&gt;framework&lt;/em&gt; Web geografico di classe mondiale.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PostGIS&lt;/strong&gt; è un estensione del &lt;em&gt;database&lt;/em&gt; &lt;strong&gt;PostgreSQL&lt;/strong&gt; che aggiunge
il supporto per gli oggetti geografici consentendo di eseguire query
spaziali.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Leaflet&lt;/strong&gt; è la principale libreria &lt;strong&gt;JavaScript&lt;/strong&gt; &lt;em&gt;open source&lt;/em&gt; per
mappe web interattive ottimizzate per dispositivi mobili.&lt;/p&gt;
&lt;hr class="docutils" /&gt;
&lt;p&gt;Durante il primo meetup &lt;strong&gt;#PyRoma&lt;/strong&gt; del 2019 abbiamo presentato una
versione ridotta di questo talk limitandoci al solo &lt;strong&gt;caso d’uso&lt;/strong&gt;. Info
qui:
&lt;a class="reference external" href="https://www.paulox.net/2019/01/21/pyroma-2019/"&gt;www.paulox.net/2019/01/21/pyroma-2019/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Feedback form:&lt;/strong&gt; &lt;a class="reference external" href="https://python.it/feedback-1608"&gt;https://python.it/feedback-1608&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;in __on &lt;strong&gt;Friday 3 May&lt;/strong&gt; at 18:00 &lt;a class="reference external" href="/en/sprints/schedule/pycon10/"&gt;**See
schedule**&lt;/a&gt;&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Fri, 03 May 2019 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2019-05-03:pycon-italia-2019/mappe-con-geodjango-postgis-e-leaflet.html</guid><category>web</category><category>postgresql</category><category>javascript</category><category>postgis</category><category>django</category><category>leaflet</category><category>maps</category><category>geospatial</category><category>gis</category><category>geodjango</category><category>python3</category></item><item><title>Maps with Django</title><link>/python-web-conf-2021/maps-with-django.html</link><description>&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;&amp;quot;Maps with Django&amp;quot; by: Paolo Melchiorre&lt;/p&gt;
&lt;p&gt;A map in a website is the best way to make geographic data easily accessible to users because it represents, in a simple way, the information relating to a specific geographical area and is in fact used by many online services.&lt;/p&gt;
&lt;p&gt;Implementing a web map can be complex and many adopt the strategy of using external services, but in most cases this strategy turns out to be a major data and cost management problem.&lt;/p&gt;
&lt;p&gt;In this talk we’ll see how to create a web map with the Python based web framework Django using its GeoDjango module, storing geographic data in your local database on which to run geospatial queries.&lt;/p&gt;
&lt;p&gt;Through this intervention you can learn how to add a map on your website, starting from a simple map based on Spatialite/SQLite up to a more complex and interactive map based on PostGIS/PostgreSQL.&lt;/p&gt;
&lt;p&gt;Recorded at the 2021 Python Web Conference (&lt;a class="reference external" href="https://2021.pythonwebconf.com"&gt;https://2021.pythonwebconf.com&lt;/a&gt;)&lt;/p&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Paolo Melchiorre</dc:creator><pubDate>Mon, 22 Mar 2021 00:00:00 +0000</pubDate><guid isPermaLink="false">tag:,2021-03-22:python-web-conf-2021/maps-with-django.html</guid><category>PythonWebConf</category><category>PythonWebConf2021</category></item></channel></rss>