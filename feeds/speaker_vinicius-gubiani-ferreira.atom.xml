<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="/" rel="alternate"></link><link href="/feeds/speaker_vinicius-gubiani-ferreira.atom.xml" rel="self"></link><id>/</id><updated>2021-10-02T00:00:00+00:00</updated><entry><title>Effective Code Reviews</title><link href="/europython-2020/effective-code-reviews.html" rel="alternate"></link><published>2020-07-23T00:00:00+00:00</published><updated>2020-07-23T00:00:00+00:00</updated><author><name>Vinicius Gubiani Ferreira</name></author><id>tag:,2020-07-23:europython-2020/effective-code-reviews.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The edge between hard skills and soft skills&lt;/p&gt;
&lt;p&gt;Does your company uses code review? In this talk I will demonstrate why it should start using them immediately, share the many benefits and situations we've gone through, besides good practices that should be used for effective code reviews, that add quality to the product/service that is being delivered.&lt;/p&gt;
</summary><category term="europython"></category><category term="europython-2020"></category><category term="europython-online"></category><category term="Agile"></category><category term="Best Practice"></category><category term="Clean Code"></category><category term="Code Analysis"></category><category term="Communication"></category></entry><entry><title>Getting started with Fuzz testing</title><link href="/pygotham-2021/getting-started-with-fuzz-testing.html" rel="alternate"></link><published>2021-10-02T00:00:00+00:00</published><updated>2021-10-02T00:00:00+00:00</updated><author><name>Vinicius Gubiani Ferreira</name></author><id>tag:,2021-10-02:pygotham-2021/getting-started-with-fuzz-testing.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Is your project safe against unforeseen scenarios? Are you sure? How about
if we take it for a ride then? There is almost no software completely error
free. And catch all of the possible errors is hard, not to say almost
impossible, but what if we use tools that help us bring possible issues to
our attention? Those that might cause security issues, or bad user
experience.&lt;/p&gt;
&lt;p&gt;In this presentation I'll discuss how to get started with fuzz testing: The
art of hitting software with invalid, unexpected, or random data and seeing
how it reacts. I'll present valid scenarios for fixing the bugs found, some
of the existing tools, and how to integrate fuzz testing with our existing
tests.&lt;/p&gt;
</summary></entry></feed>