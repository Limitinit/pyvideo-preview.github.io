<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="/" rel="alternate"></link><link href="/feeds/speaker_antoine-entwanne-rozo.atom.xml" rel="self"></link><id>/</id><updated>2021-03-17T00:00:00+00:00</updated><entry><title>Dessine-moi une tortue</title><link href="/en-attendant-la-pyconfr-2020-2021/dessine-moi-une-tortue.html" rel="alternate"></link><published>2021-03-17T00:00:00+00:00</published><updated>2021-03-17T00:00:00+00:00</updated><author><name>Antoine "entwanne" Rozo</name></author><id>tag:,2021-03-17:en-attendant-la-pyconfr-2020-2021/dessine-moi-une-tortue.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Présentation d'airobot, une bibliothèque asynchrone pour interagir avec un robot de dessin assimilable au module turtle de Python&lt;/p&gt;
</summary></entry><entry><title>Plongée au cœur du modèle asynchrone Python</title><link href="/pycon-fr-2019/plongee-au-coeur-du-modele-asynchrone-python.html" rel="alternate"></link><published>2019-11-02T00:00:00+00:00</published><updated>2019-11-02T00:00:00+00:00</updated><author><name>Antoine "entwanne" Rozo</name></author><id>tag:,2019-11-02:pycon-fr-2019/plongee-au-coeur-du-modele-asynchrone-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Tout mécanisme Python, que ce soit les itérables, les conteneurs ou encore les appelables, repose sur des interfaces simples.
Le modèle de programmation asynchrone et ses coroutines n'échappent pas à la règle et se basent aussi sur des méthodes spéciales que nous allons découvrir.&lt;/p&gt;
&lt;p&gt;L'objectif de cette présentation est d'explorer ces interfaces et de construire pas à pas un équivalent minimaliste d'asyncio.&lt;/p&gt;
</summary></entry></feed>