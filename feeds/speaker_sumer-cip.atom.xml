<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="/" rel="alternate"></link><link href="/feeds/speaker_sumer-cip.atom.xml" rel="self"></link><id>/</id><updated>2021-06-02T00:00:00+00:00</updated><entry><title>Hunting Performance in Django Code</title><link href="/djangocon-europe-2021/hunting-performance-in-django-code.html" rel="alternate"></link><published>2021-06-02T00:00:00+00:00</published><updated>2021-06-02T00:00:00+00:00</updated><author><name>Sümer Cip</name></author><id>tag:,2021-06-02:djangocon-europe-2021/hunting-performance-in-django-code.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Introduction and Outline&lt;/p&gt;
&lt;p&gt;Quick introduction of myself followed by an outline of what will be covered and what you will learn.&lt;/p&gt;
&lt;p&gt;Why we profile?&lt;/p&gt;
&lt;p&gt;A typical program spends almost all its time in a small subset of its code. Optimizing those hotspots is all that matters. This is what a profiler is for: it leads us straight to the functions where we should spend our effort.&lt;/p&gt;
&lt;p&gt;What types tools are available and how they work?&lt;/p&gt;
&lt;p&gt;-Deterministic Profilers
-Statistical Profilers&lt;/p&gt;
&lt;p&gt;I will be walking over the different use cases, pros/cons for each type. Then I will dig in a bit deeper on how they work under the hood. Understanding the inner workings a bit might be helpful while analysing its output.&lt;/p&gt;
&lt;p&gt;What kind of information do we get?&lt;/p&gt;
&lt;p&gt;I'll describe what kind of output we get from different profilers. What kind of metrics are available(Wall time, CPU time, sub/cumulative time) and where are those metrics are most useful while hunting for performance problems especially
for Web applications. I will also walk over/explain different kind of visualisations that profilers generate: Flamegraphs, Callgraph, SpeedScope...etc.&lt;/p&gt;
&lt;p&gt;Questions&lt;/p&gt;
</summary><category term="Django"></category><category term="DjangoConEU"></category><category term="djangoconeu2021"></category></entry><entry><title>Blackfire sponsor workshop: Debugging Performance</title><link href="/pycon-us-2021/blackfire-sponsor-workshop-debugging-performance.html" rel="alternate"></link><published>2021-05-14T00:00:00+00:00</published><updated>2021-05-14T00:00:00+00:00</updated><author><name>Jérôme Vieilledent</name></author><id>tag:,2021-05-14:pycon-us-2021/blackfire-sponsor-workshop-debugging-performance.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Performance is a feature of any application. It should be tested, and cared for like any feature. Using the right tools to understand how code consumes resources, and how to match a given performance budget is key. That discipline can become seamless, from development, to test/staging and production.
This workshop will give tips and tricks to master performance optimization on an example Django application.&lt;/p&gt;
</summary></entry></feed>