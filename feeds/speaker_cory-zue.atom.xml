<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="/" rel="alternate"></link><link href="/feeds/speaker_cory-zue.atom.xml" rel="self"></link><id>/</id><updated>2021-06-03T00:00:00+00:00</updated><entry><title>Modern JavaScript for Django Developers</title><link href="/djangocon-europe-2021/modern-javascript-for-django-developers.html" rel="alternate"></link><published>2021-06-03T00:00:00+00:00</published><updated>2021-06-03T00:00:00+00:00</updated><author><name>Cory Zue</name></author><id>tag:,2021-06-03:djangocon-europe-2021/modern-javascript-for-django-developers.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;The talk will include four high level parts.&lt;/p&gt;
&lt;p&gt;Part 1 is a discussion of common Django / JavaScript architectures. These include:&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;The most common &amp;quot;ad-hoc&amp;quot; approach, where JS just gets incrementally added to templates until you find yourself in a mess&lt;/li&gt;
&lt;li&gt;The &amp;quot;completely decoupled&amp;quot; JS front-end and Django-API back end, which is popular, but complex and unfamiliar to pure Django developers.&lt;/li&gt;
&lt;li&gt;A &amp;quot;hybrid architecture&amp;quot;, that combines modern JS with familiarity of working in Django.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Part 2 will focus on the fundamentals of JS tooling - a prerequisite to working with modern JavaScript. I'll start with explaining why it's so frustrating and confusing trying to add React to a Django project. Then introduce  the concept of a JavaScript toolchain. Why you need them and what they do. And finally do a quick overview of the most common JS toolchain: NPM, Webpack, and Babel, including what each does and the analogies in the Python world.&lt;/p&gt;
&lt;p&gt;Part 3 brings it together with a Django example, deep diving into how you can add a JS toolchain to a DJango project and introduce a React application into a Django application without all the complexity of managing separate standalone front end.&lt;/p&gt;
&lt;p&gt;Part 4 will briefly touch on some benefits of Modern JS, including using modern frameworks, dependency management, new features, extensions, ES6, React and JSX, Vue etc.&lt;/p&gt;
</summary><category term="Django"></category><category term="DjangoConEU"></category><category term="djangoconeu2021"></category></entry><entry><title>Growing Pains: Scaling a Django Project and Team</title><link href="/pycon-za-2017/growing-pains-scaling-a-django-project-and-team.html" rel="alternate"></link><published>2017-10-06T00:00:00+00:00</published><updated>2017-10-06T00:00:00+00:00</updated><author><name>Cory Zue</name></author><id>tag:,2017-10-06:pycon-za-2017/growing-pains-scaling-a-django-project-and-team.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;In this talk I’ll describe the evolution of a Django project as it
goes from something small and simple to a full-blown multi-server,
multi-datacenter behemoth. The talk will use examples from real-world
applications I’ve either built or contributed do, and draw heavily
from my experience leading the development of &lt;a class="reference external" href="https://www.commcarehq.org/"&gt;CommCare HQ&lt;/a&gt; (an 8-year old, ~500,000 LoC
codebase currently developed and maintained by about 20 people).&lt;/p&gt;
&lt;p&gt;The goal of the talk is to try and demonstrate how and why complexity
and process seeps into projects over time and is in fact necessary as a
project’s lifecycle matures. I'll base the talk around a series of
examples that highlight a problem and then discuss how the introduction
of a new subsystem, architecture, or process helps to address that
problem. These problems / solutions will be a mix of the technical (e.g.
&amp;quot;the site is slow&amp;quot;) and human (e.g. &amp;quot;we can't ship features quickly
anymore&amp;quot;).&lt;/p&gt;
&lt;p&gt;Anyone who is part of a growing project or team should hopefully learn
something or get some ideas for what might be in store for your future!&lt;/p&gt;
</summary></entry></feed>