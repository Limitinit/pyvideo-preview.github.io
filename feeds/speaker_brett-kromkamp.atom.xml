<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="/" rel="alternate"></link><link href="/feeds/speaker_brett-kromkamp.atom.xml" rel="self"></link><id>/</id><updated>2020-07-05T00:00:00+00:00</updated><entry><title>Flask's flexibility for the win (when building applications that don't follow the normal patterns)</title><link href="/flaskcon-2020/flasks-flexibility-for-the-win-when-building-applications-that-dont-follow-the-normal-patterns.html" rel="alternate"></link><published>2020-07-05T00:00:00+00:00</published><updated>2020-07-05T00:00:00+00:00</updated><author><name>Brett Kromkamp</name></author><id>tag:,2020-07-05:flaskcon-2020/flasks-flexibility-for-the-win-when-building-applications-that-dont-follow-the-normal-patterns.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Flask's flexibility made it the ideal choice of web framework to develop a semantic graph-based application. Specifically, being able to &amp;quot;hook up&amp;quot; a custom data back-end without breaking a sweat clinched the deal. The application in question that I would like to talk about is Contextualise (&lt;a class="reference external" href="https://www.contextualise.dev/"&gt;https://www.contextualise.dev/&lt;/a&gt;), a (personal) knowledge management application. Contextualise is an open source project: &lt;a class="reference external" href="https://github.com/brettkromkamp/contextualise"&gt;https://github.com/brettkromkamp/contextualise&lt;/a&gt;&lt;/p&gt;
</summary><category term="flask context"></category><category term="Flask"></category><category term="FlaskCon"></category></entry></feed>