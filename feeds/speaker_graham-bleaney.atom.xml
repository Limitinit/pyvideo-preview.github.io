<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>PyVideo.org</title><link href="/" rel="alternate"></link><link href="/feeds/speaker_graham-bleaney.atom.xml" rel="self"></link><id>/</id><updated>2021-05-14T00:00:00+00:00</updated><entry><title>Unexpected Execution: Wild Ways Code Execution can Occur in Python</title><link href="/pycon-us-2021/unexpected-execution-wild-ways-code-execution-can-occur-in-python.html" rel="alternate"></link><published>2021-05-14T00:00:00+00:00</published><updated>2021-05-14T00:00:00+00:00</updated><author><name>Graham Bleaney</name></author><id>tag:,2021-05-14:pycon-us-2021/unexpected-execution-wild-ways-code-execution-can-occur-in-python.html</id><summary type="html">&lt;h3&gt;Description&lt;/h3&gt;&lt;p&gt;Every Python user knows that you can execute code using eval or exec, but what about yaml or str.format? This talk will take you on a walk through all the weird and wild ways that you can achieve code execution on a Python server (and trust me, I didnâ€™t spoil the surprise by putting the weirdest ones in the description).&lt;/p&gt;
&lt;p&gt;The talk should be equal parts practical and entertaining as we work through both real examples of code execution vulnerabilities found in running code as well as absurd remote code execution exploits. The talk will end on a practical note by explaining how Facebook detects and prevents the exploit vectors we discussed, using an open source Python Static Analyzer called Pysa.&lt;/p&gt;
&lt;p&gt;All demos are available at:
&lt;a class="reference external" href="https://github.com/gbleaney/python_security"&gt;https://github.com/gbleaney/python_security&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Attendees are encouraged to download the demos and follow along at home.&lt;/p&gt;
&lt;p&gt;To get started using static analysis to detect the vulnerabilities discussed in this talk, check out:
&lt;a class="reference external" href="https://pyre-check.org/docs/pysa-quickstart/"&gt;https://pyre-check.org/docs/pysa-quickstart/&lt;/a&gt;&lt;/p&gt;
</summary></entry></feed>